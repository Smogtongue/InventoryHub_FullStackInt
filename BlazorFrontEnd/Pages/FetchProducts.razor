@page "/fetchproducts"
@inject HttpClient Http

<h3>Product List</h3>

<ul>
    @if (products != null)
    {
        foreach (var product in products)
        {
            <li>@product.Name - $@product.Price</li>
        }
    }
    else
    {
        <li>Loading...</li>
    }
</ul>

@code {
    private Product[]? products;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync("/api/productlist");
            response.EnsureSuccessStatusCode();
            var json = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Response JSON: {json}"); // Log the response content
            
            // Deserialize the JSON response
            products = System.Text.Json.JsonSerializer.Deserialize<Product[]>(json);
            Console.WriteLine("Deserialized Products: ");
            if (products != null)
            {
                foreach (var product in products)
                {
                    Console.WriteLine($"Product: {product.Name}, Price: {product.Price}");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    public class Product
    {
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        public int Id { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string? Name { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("price")]
        public double Price { get; set; }

        [System.Text.Json.Serialization.JsonPropertyName("stock")]
        public int Stock { get; set; }
    }
}
